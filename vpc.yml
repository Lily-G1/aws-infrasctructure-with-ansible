---

- name: Load Balanced Private Web Servers with AWS
  hosts: local
  connection: local
  
  vars:
    region: us-east-1
    avail_zone_1a: us-east-1a
    avail_zone_1b: us-east-1b
    keypair: default
    ec2_ami: ami-0a6b2839d44d781b2
    nat_ami: ami-08f495eb9d4054bd3 
    instance_type: t2.micro
    
  tasks:
  - name: Create Custom VPC
    ec2_vpc_net:
      name: altschool
      cidr_block: 10.0.0.0/16
      region: "{{ region }}"
      dns_hostnames: yes
      dns_support: yes
    register: altschool_vpc


  - name: Create Public Subnet 1
    ec2_vpc_subnet:
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      cidr: 10.0.1.0/24
      az: "{{ avail_zone_1a }}"
      map_public: yes
      tags:
        Name: public_server_1a
      state: present
    register: pub_subnet_1a


  - name: Create Public Subnet 2
    ec2_vpc_subnet:
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      cidr: 10.0.2.0/24
      az: "{{ avail_zone_1b }}"
      map_public: yes
      tags:
        Name: public_server_1b
      state: present
    register: pub_subnet_1b


  - name: Create Private Subnet 1
    ec2_vpc_subnet:
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      cidr: 10.0.3.0/24
      az: "{{ avail_zone_1a }}"
      map_public: no
      tags:
        Name: private_server_1a
      state: present
    register: priv_subnet_1a


  - name: Create Private Subnet 2
    ec2_vpc_subnet:
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      cidr: 10.0.4.0/24
      az: "{{ avail_zone_1b }}"
      map_public: no
      tags:
        Name: private_server_1b
      state: present
    register: priv_subnet_1b


  - name: Create Internet Gateway
    ec2_vpc_igw:
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      state: present
    register: igw


  - name: Set up Public Route Table
    ec2_vpc_route_table:
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      region: "{{ region }}"
      subnets:
        - "{{ pub_subnet_1a.subnet.id }}"
        - "{{ pub_subnet_1b.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
      tags:
        Name: Public-RT
    register: pub_rt


  - name: Create Security Group for EC2 Instances
    ec2_group:
      name: ec2-sg
      description: allow all traffic
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      region: "{{ region }}"
      rules:
        - proto: all
          cidr_ip: 0.0.0.0/0
    register: ec2_sg


  - name: Create Security Group for Load Balancer
    ec2_group:
      name: elb-sg
      description: allow http & https
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      region: "{{ region }}"
      rules:
        - proto: tcp
          ports:
            - 80
            - 443
          cidr_ip: 0.0.0.0/0
    register: elb_sg

  
  - name: Create Network Interface for NAT
    ec2_eni:
      region: "{{ region }}"
      subnet_id: "{{ pub_subnet_1a.subnet.id }}"
      security_groups: ec2-sg
      state: present
    register: nat_eni


  - name: Disable Source/Dest Check in Network Interface
    ec2_eni:
      region: "{{ region }}"
      eni_id: "{{ nat_eni.interface.id }}"
      source_dest_check: false
    register: nat_eni


  - name: Spin up EC2 Instance for NAT
    ec2_instance:
      name: "NAT-instance"
      region: "{{ region }}"
      key_name: "{{ keypair }}"
      instance_type: "{{ instance_type }}"
      image_id: "{{ nat_ami }}"
      wait: false
      vpc_subnet_id: "{{ pub_subnet_1a.subnet.id }}"
      network:
        assign_public_ip: true
        interfaces:
          - id: "{{ nat_eni.interface.id }}"
    register: ec2_nat


  - name: Set up Private Route Table
    ec2_vpc_route_table:
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      region: "{{ region }}"
      subnets:
        - "{{ priv_subnet_1a.subnet.id }}"
        - "{{ priv_subnet_1b.subnet.id }}"
      routes:
        - dest: 10.0.0.0/16
        - dest: 0.0.0.0/0
          network_interface_id: "{{ nat_eni.interface.id }}"
      tags:
        Name: Private-RT
    register: priv_rt

  
  - name: Create Private EC2 Instance 1 with Nginx & PHP installed
    ec2_instance:
      name: "private-server-1a"
      region: "{{ region }}"
      key_name: "{{ keypair }}"
      security_group: ec2-sg
      instance_type: "{{ instance_type }}"
      image_id: "{{ ec2_ami }}"
      wait: true
      vpc_subnet_id: "{{ priv_subnet_1a.subnet.id }}"
      network:
        assign_public_ip: false
      user_data: "{{ lookup('file', 'user_data.sh') }}"
    register: ec2_priv_1a


  - name: Create Private EC2 Instance 2 with Nginx & PHP installed
    ec2_instance:
      name: "private-server-1b"
      region: "{{ region }}"
      key_name: "{{ keypair }}"
      security_group: ec2-sg
      instance_type: "{{ instance_type }}"
      image_id: "{{ ec2_ami }}"
      wait: true
      vpc_subnet_id: "{{ priv_subnet_1b.subnet.id }}"
      network:
        assign_public_ip: false
      user_data: "{{ lookup('file', 'user_data.sh') }}"
    register: ec2_priv_1b


  - name: Create Target Group for Load Balancer
    elb_target_group:
      name: altschool-tg
      protocol: http
      port: 80
      region: "{{ region }}"
      vpc_id: "{{ altschool_vpc.vpc.id }}"
      health_check_path: /index.php
      target_type: instance
      wait: true
      state: present
    tags: targetgrp


  - name: Configure Load Balancer
    elb_application_lb:
      region: "{{ region }}"
      name: altschool-elb
      scheme: internet-facing
      subnets:
        - "{{ pub_subnet_1a.subnet.id }}"
        - "{{ pub_subnet_1b.subnet.id }}"
      security_groups:
        - elb-sg
      listeners:
        - Protocol: HTTP
          Port: 80
          DefaultActions:
            - Type: forward
              TargetGroupName: altschool-tg
      state: present
    tags: loadbal


  - name: Register Private Instance 1 to Target Group
    elb_target:
      target_group_name: altschool-tg
      target_id: "{{ ec2_priv_1a.instances.0.instance_id }}"
      state: present


  - name: Register Private Instance 2 to Target Group
    elb_target:
      target_group_name: altschool-tg
      target_id: "{{ ec2_priv_1b.instances.0.instance_id }}"
      state: present